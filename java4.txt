 Internal Architecture of JVM
============================
Diagram: java4.1

Java application contains java code instructions.Once if we compiled java code instructions convert to byte code instructions in .class file.

JVM will invoke one module called classloader/subsystem to load all the byte code instructions from .class file.That work of classloader is to check these byte code instructions are proper or not. If they are not proper then it will refuse the execution. If they are proper then it will allocate the memory.

We have five types of memories in java.

1) Method Area 
----------------
It contains code of a class, code of a variable and code of a method.

2) Heap 
--------
Our object creations will store in heap area.

3) Java Stack 
-------------
Java methods will store in method area but to execute those methods we required some 
memory and that memory will be allocated in java stack.


4) PC register 
----------------
It is a program counter register which is used to track the address of an instructions.

5) Native Method Stack 
----------------------
Java methods will execute in method area.
Similarly native methods will execute in native method stack.
But we can't execute native methods directly. We required a program called Native method interface.

Execution engine
----------------
Whenever JVM loads byte code instructions from .class file , it will uses interpreter and JIT compiler. 

Interpreter is used to execute our program line by line procedure.

JIT compiler is used to increase the execution speed of our program.

Finally, our JVM converts byte code to machine code .


Interview Questions
===================

Q) What is native method in java?

A method which is developed by using some other language is called native method.



Q) How many memories are there in java?

We have five memories in java.

1) Method Area 
2) Heap
3) Java Stack 
4) PC Register 
5) Native Method Stack




Q) What is JIT compiler?

It is a part of a JVM which is used to increase the execution speed of our program.




Q) How many classloaders are there in java?

We have three predefined classloaders in java.

1) Bootstrap classloader 

2) Extension classloader

3) Application/System classloader 


Q) What is JVM?

JVM is an interpreter which is used to execute our program line by line procedure and converts byte cod to machine code.



Q) Features of Java ?

We have following important features in java.

1) Simple 

2) Object oriented

3) Platform independent 

4) Portable 

5) Architecture Neutral 

6) Robust 

7) Multithreaded 

8) Distributed 

and etc.
























































